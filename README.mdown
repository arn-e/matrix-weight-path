## Matrix Minimum Weight Path

Two sample API's which will determine the minimum weight path through a matrix
Both should accommodate matrices of varying dimensions

**Problem Outline** :  
https://gist.github.com/4004776

These two apps take radically different approaches to the solution.

* matrix_weight_sinatra 
  * Ruby / Sinatra
  * basically a one line solution in Ruby. It's a bit of a nested circus, but elegant in its own way
* matrix_weight_spark
  * Java / C / Spark
  * a (very) long winded implementation using the Sinatra-inspired web framework Spark which runs on the JVM
  * core web-application logic written in Java
  * matrix calculations written in C and linked with JNI

###Installation Instructions (Spark Application) :

The Spark JAR files as well as dependencies will need to be added to your CLASSPATH 

For convenience, and given that this is a very small project, the dependencies have been added to a  "./lib" directory

**Compile** :

    javac -cp "./lib/*" ShortWeight.java

**Run** :

    java -cp "./lib/*:." ShortWeight

Note that the current directory has also been added to the path

You may need to re-compile the C binary depending on your platform.

My compiler flags are below (OSX) :

    gcc -std=c99 -o libmatrix_weight.dylib -shared -I/System/Library/Frameworks/JavaVM.framework/Versions/A/Headers/ matrix_weight.c -lc

###Installation Instructions (Sinatra Application) :

Assuming you have a Ruby environment set up, this should be considerably simpler :

    gem install sinatra
    ruby min_weight.rb

###User Testing

Sample CURL command :  

    curl -v -H "Accept: application/json" -H "Content-type: application/json" -X POST -d '{"yo":"[[23,5,4,5],[6,7,15,5],[2,5,2,4]]"}'  http://localhost:9000/

###To-Do :

* Add tests for both applications  
  (I normally strive to test, however this was a bit of an exploratory project, and I got lost in coding)

###Reference & Reading

**Excellent tutorial on working with Java & C with the JNI** :  
http://stuf.ro/calling-c-code-from-java-using-jni/

**Spark - Sinatra Inspired Java Web Framework**  
http://www.sparkjava.com/readme.html

**Sinatra**   
http://www.sinatrarb.com/

**JNI Documentation (Oracle, I haven't read most of this)**  
http://docs.oracle.com/javase/6/docs/technotes/guides/jni/spec/jniTOC.html
